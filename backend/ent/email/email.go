// Code generated by ent, DO NOT EDIT.

package email

const (
	// Label holds the string label denoting the email type in the database.
	Label = "email"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFrom holds the string denoting the from field in the database.
	FieldFrom = "from"
	// FieldSubject holds the string denoting the subject field in the database.
	FieldSubject = "subject"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldSentAt holds the string denoting the sentat field in the database.
	FieldSentAt = "sent_at"
	// FieldArchived holds the string denoting the archived field in the database.
	FieldArchived = "archived"
	// FieldRead holds the string denoting the read field in the database.
	FieldRead = "read"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the email in the database.
	Table = "emails"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "emails"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_emails"
)

// Columns holds all SQL columns for email fields.
var Columns = []string{
	FieldID,
	FieldFrom,
	FieldSubject,
	FieldBody,
	FieldSentAt,
	FieldArchived,
	FieldRead,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "emails"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_emails",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultArchived holds the default value on creation for the "archived" field.
	DefaultArchived bool
	// DefaultRead holds the default value on creation for the "read" field.
	DefaultRead bool
)
